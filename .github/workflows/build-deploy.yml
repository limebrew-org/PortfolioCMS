name: Docker CI/CD to Docker Hub and GCP VM

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Grab Version from .env file
        run: |
          VER=$(grep PORTFOLIO_VERSION .env | cut -f 2 -d "=" | tr "\"" "\n")
          echo "USERNAME=limebrewofficial" >> $GITHUB_ENV
          echo "VERSION=$VER" >> $GITHUB_ENV
          echo "REPO=portfolio-cms" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: dockerfiles/Dockerfile.prod
          platforms: linux/amd64
          push: true
          tags: ${{ env.USERNAME }}/${{ env.REPO }}:${{ env.VERSION }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PORTFOLIO_CMS_HOST_IP }}
          username: ${{ secrets.PORTFOLIO_CMS_HOST_USERNAME }}
          key: ${{ secrets.PORTFOLIO_CMS_HOST_KEY }}
          port: 22
          script: |
            echo "Successfully SSH into the production server"
            #? Navigate to PortfolioCMS folder
            cd PortfolioCMS/
            #? Checkout to main branch
            git checkout main
            echo "Checkout to main branch"
            #? Remove existing running container
            echo "Removing the existing containers and images"
            sudo make compose_prod_down_v1
            sudo docker system prune -a --force
            #? Pull latest changes
            echo "Pulling latest changes in main branch"
            git pull origin main
            #? Global variables
            VERSION=$(grep PORTFOLIO_VERSION .env | cut -f 2 -d "=" | tr "\"" "\n")
            USERNAME="limebrewofficial"
            REPO="portfolio-cms"
            #? Fetch the latest image
            echo "Pulling latest image specified: $USERNAME/$REPO:$VERSION"
            #? Build the services
            echo "PortfolioCMS build initialized via docker-compose"
            sudo make compose_prod_up_v1
            #? Success Message
            echo "PortfolioCMS running successfully with latest tag: $USERNAME/$REPO:$VERSION"
